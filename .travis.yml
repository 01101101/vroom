language: cpp
dist: bionic

git:
  quiet: true

branches:
  only:
    - master
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/

sudo: required

matrix:
  include:
    - os: linux
      # TODO restore when addons.apt.packages is enabled for bionic
      # addons:
      #   apt:
      #     packages:
      #       - g++-7
      #       - libboost-all-dev
      env:
        - COMPILER=g++-7
        - CXX-PACKAGE=g++-7

    - os: linux
      # TODO restore when addons.apt.packages is enabled for bionic
      # addons:
      #   apt:
      #     packages:
      #       - g++-8
      #       - libboost-all-dev
      env:
        - COMPILER=g++-8
        - CXX-PACKAGE=g++-8

    - os: linux
      # TODO restore when addons.apt.packages is enabled for bionic
      # addons:
      #   apt:
      #     packages:
      #       - clang-5.0
      #       - libboost-all-dev
      env:
        - COMPILER=clang++-5.0
        - CXX-PACKAGE=clang-5.0

    - os: linux
      # TODO restore when addons.apt.packages is enabled for bionic
      # addons:
      #   apt:
      #     packages:
      #       - clang-6.0
      #       - libboost-all-dev
      env:
        - COMPILER=clang++-6.0
        - CXX-PACKAGE=clang-6.0

before_script:
  - export ROOT_FOLDER="$(pwd)"
  - export BUILD_FOLDER="$(pwd)/src"
  - cd ${BUILD_FOLDER}
  - export CXX=${COMPILER}
  # TODO remove when addons.apt.packages is enabled for bionic
  - sudo apt-get install -y ${CXX-PACKAGE}
  - sudo apt-get install -y libboost-all-dev
  - ${CXX} --version

script:
  - CHANGED_FILES=`git diff --name-only master ${TRAVIS_COMMIT}`
  # Check build without libosrm only if source files have been
  # modified.
  - echo ${CHANGED_FILES}
  - if echo ${CHANGED_FILES} | grep -v -e "\.h" -e "\.cpp"; then travis_terminate 0; fi
  - make
  # Check build with libosrm installed only on master and if relevant
  # files have been modified.
  - if [ "$TRAVIS_PULL_REQUEST" != "false" ] && echo ${CHANGED_FILES} | grep -v "libosrm_wrapper"; then travis_terminate 0; fi
  - make clean
  - cd ${ROOT_FOLDER}
  - sudo apt-get install build-essential git cmake pkg-config libbz2-dev libstxxl-dev libstxxl1v5 libxml2-dev libzip-dev lua5.2 liblua5.2-dev libtbb-dev libluabind-dev libluabind0.9.1v5
  - git clone https://github.com/Project-OSRM/osrm-backend.git
  - cd osrm-backend
  - git checkout v5.19.0
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_BUILD_TYPE=Release
  - cmake --build .
  - sudo cmake --build . --target install
  - cd ${BUILD_FOLDER}
  - make
